Script started on Mon 30 Oct 2017 11:49:23 PM EDT
tuser@tutor-vserver:~/mp2$ ssh janwesh@users.cs.umb.edu
janwesh@users.cs.umb.edu's password: 
Welcome to Ubuntu 16.04.3 LTS (GNU/Linux 4.4.0-96-generic x86_64)

 * Documentation:  https://help.ubuntu.com
 * Management:     https://landscape.canonical.com
 * Support:        https://ubuntu.com/advantage

99 packages can be updated.
0 updates are security updates.


You have new mail.
Last login: Mon Oct 30 23:46:50 2017 from 73.219.2.116
janwesh@itserver6:~$ cd cs341/mp2
janwesh@itserver6:~/cs341/mp2$ a
a: command not found
janwesh@itserver6:~/cs341/mp2$ cat strcpyc.c
/* strcpyc.c: driver for testing assembly language mystrcpy function 
	Bob Wilson
	4/28/2016
   */

extern char *mystrcpy(char *s, char *ct);

int main()
{
   char s[100];
   char *ct ="Hello World\n";

   if(s == mystrcpy(s, ct))
      printf("The strcpy function returned the correct pointer value.\n");
   else
      printf("The strcpy function returned the wrong pointer value.\n");
   if (!strcmp(s,ct))
      printf("The strcpy function copied the data correctly.\n");
   else
      printf("The strcpy function copied the data incorrectly.\n");
   printf("The contents of array s are: %s", s);
   return 0;	
}
janwesh@itserver6:~/cs341/mp2$ cat strcpy.s


.text
.globl _mystrcpy

_mystrcpy:
	pushl %ebp
	movl 8(%esp),%eax
	movl 12(%esp),%edx
	movl %eax, %ebx
copy:
	cmpb $0, (%edx)
	je done
	movb (%edx), %cl
	movb %cl, (%eax)
	incl %eax
	incl %edx
	jmp copy

done:
//	popl %ebp
	movb $0, (%eax)
	movl %ebx, %eax
	popl %ebp
	ret

.end







janwesh@itserver6:~/cs341/mp2$ cat makefile
# makefile: makefile for assembly-language examples
# 
# Assumes a matched pair of sources, e.g., myprog.s and myprogc.c,
# an assembler source for a function and its C driver.

# Usage: For an assembler source, say myprog.s, with a corresponding 
#  C driver myprogc.c, set A to the basename in the make command line: 
#  "make A=myprog myprog.lnx" or just "make A=myprog"
#  (since $(A).lnx is the first make target)
#  Then myprog.lnx is ready for downloading via "mtip -f myprog.lnx"
#  (followed by ~r and ~d inside the mtip program)

# also "make clean" to clean up non-source files in a directory

# Here the assembler program has the primary source name,
# the C program is just a driver of almost the same basename:
C = $(A)c

# system directories needed for compilers, libraries, header files--
# assumes the environment variables SAPC_TOOLS, SAPC_GNUBIN, and SAPC_SRC
# are set up, usually by the ulab module

PC_LIB = $(SAPC_TOOLS)/lib
PC_INC = $(SAPC_TOOLS)/include

CC   = $(SAPC_GNUBIN)/i386-gcc
CFLAGS = -g -Wall -Wno-implicit -Wshadow -I$(PC_INC)
AS   = $(SAPC_GNUBIN)/i386-as
LD   = $(SAPC_GNUBIN)/i386-ld
NM   = $(SAPC_GNUBIN)/i386-nm

# File suffixes:
# .c	C source (often useful both for UNIX host and SAPC)
# .s 	assembly language source
# .opc  relocatable machine code, initialized data, etc., for SA PC
# .lnx  executable image (bits as in memory), for SA PC (Linux a.out format)
# .syms text file of .lnx's symbols and their values (the "symbol table")
# Symbol file "syms"--for most recently built executable in directory

# PC executable--tell ld to start code at 0x1000e0, load special startup
# module, special PC C libraries--
# Code has 0x20 byte header, so use "go 100100" (hopefully easier to
# remember than 100020)

$(A).lnx: $(A).opc $(C).opc 
	$(LD) -N -Ttext 1000e0 -o $(A).lnx \
		$(PC_LIB)/startup0.opc $(PC_LIB)/startup.opc \
		$(C).opc $(A).opc $(PC_LIB)/libc.a
	rm -f syms;$(NM) -n $(A).lnx>$(A).syms;ln -s $(A).syms syms

$(A).opc: $(A).s
	$(AS) -o $(A).opc $(A).s

# tell gcc to use $(PC_INC) for #include <...> headers--
$(C).opc: $(C).c
	$(CC) $(CFLAGS) -c -o $(C).opc $(C).c
	
clean:
	rm -f *.o *.opc *.syms *.lnx core syms
janwesh@itserver6:~/cs341/mp2$ ls -al
total 280
drwxrwsr-x 3 janwesh cs341-1G   4096 Oct 30 23:49 .
drwxrws--- 5 janwesh cs341-1G   4096 Oct  3 22:53 ..
-rw-r--r-- 1 janwesh cs341-1G    399 Oct 16 15:22 countc.c
-rw-r--r-- 1 janwesh cs341-1G    832 Oct 16 15:21 count.s
-rw-r--r-- 1 janwesh cs341-1G   9964 Oct 16 15:31 count.script-console
-rw-r--r-- 1 janwesh cs341-1G  13038 Oct 16 15:30 count.script-gdb
-rw-r--r-- 1 janwesh cs341-1G   2173 Oct 10 22:24 makefile
-rw-r--r-- 1 janwesh cs341-1G 147915 Oct 10 22:24 mp2.pdf
-rw-r--r-- 1 janwesh cs341-1G    395 Oct 25 22:25 printbinc.c
-rw-r--r-- 1 janwesh cs341-1G   3134 Oct 30 20:44 printbin_gdb.script
-rw-r--r-- 1 janwesh cs341-1G    839 Oct 30 20:21 printbin.s
-rw-r--r-- 1 janwesh cs341-1G  10818 Oct 30 20:43 printbin_vm.script
-rw-r--r-- 1 janwesh cs341-1G    616 Oct 30 23:49 strcpyc.c
-rw-r--r-- 1 janwesh cs341-1G   1869 Oct 30 23:47 strcpyc.opc
-rwxr-xr-x 1 janwesh cs341-1G  17898 Oct 30 23:47 strcpy.lnx
-rw-r--r-- 1 janwesh cs341-1G    124 Oct 30 23:47 strcpy.opc
-rw-r--r-- 1 janwesh cs341-1G    288 Oct 26 11:19 strcpy.s
-rw-r--r-- 1 janwesh cs341-1G   1347 Oct 30 23:47 strcpy.syms
-rw-r--r-- 1 janwesh cs341-1G    159 Oct 10 22:24 sum10c.c
-rw-r--r-- 1 janwesh cs341-1G    426 Oct 10 22:24 sum10.s
-rw-r--r-- 1 janwesh cs341-1G   4696 Oct 10 22:24 sum10.script_mod.txt
lrwxrwxrwx 1 janwesh cs341-1G     11 Oct 30 23:47 syms -> strcpy.syms
drwxrwsr-x 2 janwesh cs341-1G   4096 Oct  3 23:02 warmup
janwesh@itserver6:~/cs341/mp2$ ssh ulab
janwesh@ulab's password: 
Last login: Mon Oct 30 23:47:10 2017 from itserver6.cs.um
Sun Microsystems Inc.   SunOS 5.8       Generic 64-bit  February 2000

 Welcome to blade57.cs.umb.edu, a SunBlade 100 (uIIe-S128)

                    Authorized users only.

You have new mail.
blade57(1)% cd cs341/mp2
blade57(2)% ls -lg
total 272
-rw-r--r--   1 janwesh  cs341-1G      832 Oct 16 15:21 count.s
-rw-r--r--   1 janwesh  cs341-1G     9964 Oct 16 15:31 count.script-console
-rw-r--r--   1 janwesh  cs341-1G    13038 Oct 16 15:30 count.script-gdb
-rw-r--r--   1 janwesh  cs341-1G      399 Oct 16 15:22 countc.c
-rw-r--r--   1 janwesh  cs341-1G     2173 Oct 10 22:24 makefile
-rw-r--r--   1 janwesh  cs341-1G   147915 Oct 10 22:24 mp2.pdf
-rw-r--r--   1 janwesh  cs341-1G      839 Oct 30 20:21 printbin.s
-rw-r--r--   1 janwesh  cs341-1G     3134 Oct 30 20:44 printbin_gdb.script
-rw-r--r--   1 janwesh  cs341-1G    10818 Oct 30 20:43 printbin_vm.script
-rw-r--r--   1 janwesh  cs341-1G      395 Oct 25 22:25 printbinc.c
-rwxr-xr-x   1 janwesh  cs341-1G    17898 Oct 30 23:47 strcpy.lnx
-rw-r--r--   1 janwesh  cs341-1G      124 Oct 30 23:47 strcpy.opc
-rw-r--r--   1 janwesh  cs341-1G      288 Oct 26 11:19 strcpy.s
-rw-r--r--   1 janwesh  cs341-1G     1347 Oct 30 23:47 strcpy.syms
-rw-r--r--   1 janwesh  cs341-1G      616 Oct 30 23:49 strcpyc.c
-rw-r--r--   1 janwesh  cs341-1G     1869 Oct 30 23:47 strcpyc.opc
-rw-r--r--   1 janwesh  cs341-1G      426 Oct 10 22:24 sum10.s
-rw-r--r--   1 janwesh  cs341-1G     4696 Oct 10 22:24 sum10.script_mod.txt
-rw-r--r--   1 janwesh  cs341-1G      159 Oct 10 22:24 sum10c.c
lrwxrwxrwx   1 janwesh  cs341-1G       11 Oct 30 23:47 syms -> strcpy.syms
drwxrwsr-x   2 janwesh  cs341-1G     4096 Oct  3 23:02 warmup
blade57(3)% make clean
rm -f *.o *.opc *.syms *.lnx core syms
file temporarily unavailable on the server, retrying...
file temporarily unavailable on the server, retrying...
file temporarily unavailable on the server, retrying...
blade57(4)% ls
count.s               printbin.s            sum10.s
count.script-console  printbin_gdb.script   sum10.script_mod.txt
count.script-gdb      printbin_vm.script    sum10c.c
countc.c              printbinc.c           warmup
makefile              strcpy.s
mp2.pdf               strcpyc.c
blade57(5)% make A=strcpy
/groups/ulab/bin/i386-as -o strcpy.opc strcpy.s
/groups/ulab/bin/i386-gcc -g -Wall -Wno-implicit -Wshadow -I/groups/ulab/pcdev/include -c -o strcpyc.opc strcpyc.c
/groups/ulab/bin/i386-ld -N -Ttext 1000e0 -o strcpy.lnx \
        /groups/ulab/pcdev/lib/startup0.opc /groups/ulab/pcdev/lib/startup.opc \
        strcpyc.opc strcpy.opc /groups/ulab/pcdev/lib/libc.a
rm -f syms;/groups/ulab/bin/i386-nm -n strcpy.lnx>strcpy.syms;ln -s strcpy.syms syms
blade57(6)% logout
Connection to ulab closed.
janwesh@itserver6:~/cs341/mp2$ logout
Connection to users.cs.umb.edu closed.
tuser@tutor-vserver:~/mp2$ scp janwesh@users.cs.umb.edu:cs341/mp2/strcpy [K* .
janwesh@users.cs.umb.edu's password: 
strcpyc.c                                       0%    0     0.0KB/s   --:-- ETAstrcpyc.c                                     100%  616     0.6KB/s   00:00    
strcpyc.opc                                     0%    0     0.0KB/s   --:-- ETAstrcpyc.opc                                   100% 1881     1.8KB/s   00:00    
strcpy.lnx                                      0%    0     0.0KB/s   --:-- ETAstrcpy.lnx                                    100%   17KB  17.5KB/s   00:00    
strcpy.opc                                      0%    0     0.0KB/s   --:-- ETAstrcpy.opc                                    100%  124     0.1KB/s   00:00    
strcpy.s                                        0%    0     0.0KB/s   --:-- ETAstrcpy.s                                      100%  288     0.3KB/s   00:00    
strcpy.syms                                     0%    0     0.0KB/s   --:-- ETAstrcpy.syms                                   100% 1347     1.3KB/s   00:00    
tuser@tutor-vserver:~/mp2$ mtip -f strcpy.lnx
For command help, type ~?
For help on args, rerun without args
Code starts at 0x100100
Using board # 1 
Please type <CR> to confirm console setting: 
Setting console dev to COM2Console: colour EGA+ 80x25
COM1 at 0x03f8 (irq = 4) is a 16550A
COM2 at 0x02f8 (irq = 3) is a 16550A

                 Welcome to UMB Tutor for the PC
   UMB Tutor is a 32-bit protected-mode PC debugger/downloader,
       based on Linux, UMB Tutor for m68k, and remote gdb.
UMB Tutor is free software and you are welcome to distribute copies
of it under certain conditions.  There is no warranty for this program.
The copyright and warranty provisions follow the Gnu general public
license, available for view in gdb and elsewhere.  Full sources available.
--bugs, suggestions, questions to eoneil@cs.umb.edu

Exception 3 at EIP=00057a9b: Breakpoint
Tutor> ~downloading strcpy.lnx

.....Done.

Download done, setting EIP to 100100.
Tutor> go 100100
The strcpy function returned the correct pointer value.
The strcpy function copied the data correctly.
The contents of array s are: Hello World
Exception 3 at EIP=00100110: Breakpoint
Tutor> ~q 
Quit handler: 
killing process 1909 Leaving board #1
tuser@tutor-vserver:~/mp2$ exit
exit

Script done on Mon 30 Oct 2017 11:51:56 PM EDT
