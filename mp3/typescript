Script started on Tue 14 Nov 2017 03:19:41 PM EST
tuser@tutor-vserver:~/mp3$ ssh janwesh@users.cs.umb.edu
janwesh@users.cs.umb.edu's password: 
Welcome to Ubuntu 16.04.3 LTS (GNU/Linux 4.4.0-96-generic x86_64)

 * Documentation:  https://help.ubuntu.com
 * Management:     https://landscape.canonical.com
 * Support:        https://ubuntu.com/advantage

99 packages can be updated.
0 updates are security updates.


You have new mail.
Last login: Mon Nov 13 21:45:55 2017 from 73.219.2.116
janwesh@itserver6:~$ cd cs341/mp3
janwesh@itserver6:~/cs341/mp3$ ls -al
ls: cannot read symbolic link 'syms': Input/output error
total 80
drwxr-sr-x 2 janwesh cs341-1G  4096 Nov 13 20:32 .
drwxrws--- 6 janwesh cs341-1G  4096 Nov  6 23:13 ..
-rw-r--r-- 1 janwesh cs341-1G   713 Nov  6 23:13 echoc.c
-rw-r--r-- 1 janwesh cs341-1G  4012 Nov 13 20:19 echoc.opc
-rwxr-xr-x 1 janwesh cs341-1G 29093 Nov 13 20:19 echo.lnx
-rw-r--r-- 1 janwesh cs341-1G   165 Nov 13 20:19 echo.opc
-rw-r--r-- 1 janwesh cs341-1G  1251 Nov 11 22:49 echo.s
-rw-r--r-- 1 janwesh cs341-1G  1756 Nov 13 20:19 echo.syms
-rw-r--r-- 1 janwesh cs341-1G  2173 Nov  6 23:13 makefile
-rw-r--r-- 1 janwesh cs341-1G 12866 Nov  6 23:13 Rubric.docx
lrwxrwxrwx 1 janwesh cs341-1G     9 Nov 13 20:19 syms
janwesh@itserver6:~/cs341/mp3$ cat echoc.c
/* echo.c: use assembly language i/o to echo console input */
/* build with makefile in $pcex:  make A=echo      */

#include <stdio.h>
#include <serial.h>

extern void echo(int conport, unsigned char esc_char);
void main()
{
  int console = sys_get_console_dev(); /* find out current sys console */
  int conport;
  char escape;

  switch (console) {
  case COM1: conport = COM1_BASE;
    break;
  case COM2: conport = COM2_BASE;
    break;
  default: printf("Expected serial port for console, exiting\n");
    return;
  }

  printf("Type escape character and enter\n");
  if (scanf("%c\n", &escape) != 1)
    escape = 's';
  echo(conport, escape);
  printf("\nEscape character typed - exiting.\n");
  return;
}
janwesh@itserver6:~/cs341/mp3$ cat echo.s

//Anwesh Joshi

    .text
    .globl _echo
_echo:
    pushl %ebp            #pushing parameters to the stack
    movl %esp, %ebp       #saving %esp to %ebp
    movw 8(%ebp), %dx    #accessing first parameter 
    movb 12(%ebp), %cl	  #accessing second parameter
loop:
    movw 8(%ebp), %dx 	#get comport value and put in %dx
    addw $5, %dx	#add 5 to get to lsr bit
    inb (%dx), %al	#read from comport and put in %al
    andb $0x1, %al	#mask the result with 0x1
    jz loop		#check if receiver is ready or not
    movw 8(%ebp), %dx	#get comport value
    inb (%dx), %al	#read from comport and put in %al
    movb %al, %ah	#save %al value to %ah
    cmpb %al, %cl	#check the value of al with escape character
    je done		#if matches go to done
xmit:
    movw 8(%ebp), %dx	#get comport value
    addw $5, %dx	#add 5 to get to lsr bit
    inb (%dx), %al	#read from comport + lsr lsr bit
    andb $0x20, %al	#maske with 0x20 to %al
    jz xmit		#jump back to xmit if the xmit bit is not ready
    movw 8(%ebp), %dx	#get comport value
    movb %ah, %al	#move %ah value to %al
    outb %al, (%dx)	#output %al value to comport + lsrbit
    jmp loop		#go back to loop again to start
done:
    popl %ebp		  #pop %ebp register parameters
    ret
    .end

janwesh@itserver6:~/cs341/mp3$ cat makefile
# makefile: makefile for assembly-language examples
# 
# Assumes a matched pair of sources, e.g., myprog.s and myprogc.c,
# an assembler source for a function and its C driver.

# Usage: For an assembler source, say myprog.s, with a corresponding 
#  C driver myprogc.c, set A to the basename in the make command line: 
#  "make A=myprog myprog.lnx" or just "make A=myprog"
#  (since $(A).lnx is the first make target)
#  Then myprog.lnx is ready for downloading via "mtip -f myprog.lnx"
#  (followed by ~r and ~d inside the mtip program)

# also "make clean" to clean up non-source files in a directory

# Here the assembler program has the primary source name,
# the C program is just a driver of almost the same basename:
C = $(A)c

# system directories needed for compilers, libraries, header files--
# assumes the environment variables SAPC_TOOLS, SAPC_GNUBIN, and SAPC_SRC
# are set up, usually by the ulab module

PC_LIB = $(SAPC_TOOLS)/lib
PC_INC = $(SAPC_TOOLS)/include

CC   = $(SAPC_GNUBIN)/i386-gcc
CFLAGS = -g -Wall -Wno-implicit -Wshadow -I$(PC_INC)
AS   = $(SAPC_GNUBIN)/i386-as
LD   = $(SAPC_GNUBIN)/i386-ld
NM   = $(SAPC_GNUBIN)/i386-nm

# File suffixes:
# .c	C source (often useful both for UNIX host and SAPC)
# .s 	assembly language source
# .opc  relocatable machine code, initialized data, etc., for SA PC
# .lnx  executable image (bits as in memory), for SA PC (Linux a.out format)
# .syms text file of .lnx's symbols and their values (the "symbol table")
# Symbol file "syms"--for most recently built executable in directory

# PC executable--tell ld to start code at 0x1000e0, load special startup
# module, special PC C libraries--
# Code has 0x20 byte header, so use "go 100100" (hopefully easier to
# remember than 100020)

$(A).lnx: $(A).opc $(C).opc 
	$(LD) -N -Ttext 1000e0 -o $(A).lnx \
		$(PC_LIB)/startup0.opc $(PC_LIB)/startup.opc \
		$(C).opc $(A).opc $(PC_LIB)/libc.a
	rm -f syms;$(NM) -n $(A).lnx>$(A).syms;ln -s $(A).syms syms

$(A).opc: $(A).s
	$(AS) -o $(A).opc $(A).s

# tell gcc to use $(PC_INC) for #include <...> headers--
$(C).opc: $(C).c
	$(CC) $(CFLAGS) -c -o $(C).opc $(C).c
	
clean:
	rm -f *.o *.opc *.syms *.lnx core syms
janwesh@itserver6:~/cs341/mp3$ ssh ulab
janwesh@ulab's password: 
Last login: Mon Nov 13 20:19:35 2017 from itserver6.cs.um
Over disk quota on /home/sergio, remove 4928K within 2.0 days
Over disk quota on /home/rolandg, remove 4928K within 2.0 days
Over disk quota on /home/janwesh, remove 4928K within 2.0 days
Sun Microsystems Inc.   SunOS 5.8       Generic 64-bit  February 2000

 Welcome to blade57.cs.umb.edu, a SunBlade 100 (uIIe-S128)

                    Authorized users only.

You have new mail.
blade57(1)% cd cs341/mp3
blade57(2)% make clean
rm -f *.o *.opc *.syms *.lnx core syms
blade57(3)% ls
Rubric.docx  echo.s       echoc.c      makefile
blade57(4)% make A=echo
/groups/ulab/bin/i386-as -o echo.opc echo.s
/groups/ulab/bin/i386-gcc -g -Wall -Wno-implicit -Wshadow -I/groups/ulab/pcdev/include -c -o echoc.opc echoc.c
/groups/ulab/bin/i386-ld -N -Ttext 1000e0 -o echo.lnx \
        /groups/ulab/pcdev/lib/startup0.opc /groups/ulab/pcdev/lib/startup.opc \
        echoc.opc echo.opc /groups/ulab/pcdev/lib/libc.a
rm -f syms;/groups/ulab/bin/i386-nm -n echo.lnx>echo.syms;ln -s echo.syms syms
blade57(5)% pwd
/courses/cs341/f17/cheungr/janwesh/mp3
blade57(6)% logout
Connection to ulab closed.
janwesh@itserver6:~/cs341/mp3$ logout
Connection to users.cs.umb.edu closed.
tuser@tutor-vserver:~/mp3$ scp -r janwesh@users.cs.umb.edy:cs341/mp3/echo.* .
ssh: Could not resolve hostname users.cs.umb.edy: Name or service not known
tuser@tutor-vserver:~/mp3$ A[Kscp -r janwesh@users.cs.umb.edy:cs341/mp3/echo.* .[C[C[C[1P[1@u
janwesh@users.cs.umb.edu's password: 
echo.lnx                                        0%    0     0.0KB/s   --:-- ETAecho.lnx                                      100%   28KB  28.4KB/s   00:00    
echo.opc                                        0%    0     0.0KB/s   --:-- ETAecho.opc                                      100%  165     0.2KB/s   00:00    
echo.s                                          0%    0     0.0KB/s   --:-- ETAecho.s                                        100% 1251     1.2KB/s   00:00    
echo.syms                                       0%    0     0.0KB/s   --:-- ETAecho.syms                                     100% 1756     1.7KB/s   00:00    
tuser@tutor-vserver:~/mp3$ ls
[0m[01;32mecho.lnx[0m  echo.opc  echo.s  echo.syms  typescript
tuser@tutor-vserver:~/mp3$ mtip -f echo.lnx
For command help, type ~?
For help on args, rerun without args
Code starts at 0x100100
Using board # 1 
Please type <CR> to confirm console setting: 
Setting console dev to COM2Console: colour EGA+ 80x25
COM1 at 0x03f8 (irq = 4) is a 16550A
COM2 at 0x02f8 (irq = 3) is a 16550A

                 Welcome to UMB Tutor for the PC
   UMB Tutor is a 32-bit protected-mode PC debugger/downloader,
       based on Linux, UMB Tutor for m68k, and remote gdb.
UMB Tutor is free software and you are welcome to distribute copies
of it under certain conditions.  There is no warranty for this program.
The copyright and warranty provisions follow the Gnu general public
license, available for view in gdb and elsewhere.  Full sources available.
--bugs, suggestions, questions to eoneil@cs.umb.edu

Exception 3 at EIP=00057a9b: Breakpoint
Tutor> ~downloading echo.lnx

.......Done.

Download done, setting EIP to 100100.
Tutor> go 100100
Type escape character and enter
a
bcd
Escape character typed - exiting.
Exception 3 at EIP=00100110: Breakpoint
Tutor> go 100100
Type escape character and enter
q
abc
Escape character typed - exiting.
Exception 3 at EIP=00100110: Breakpoint
Tutor> go 100100
Type escape character and enter
q
abcdexy
Escape character typed - exiting.
Exception 3 at EIP=00100110: Breakpoint
Tutor> go 100100
Type escape character and enter
q
abcde
xy
Escape character typed - exiting.
Exception 3 at EIP=00100110: Breakpoint
Tutor> ~q 
Quit handler: 
killing process 1875 Leaving board #1
tuser@tutor-vserver:~/mp3$ exit
exit

Script done on Tue 14 Nov 2017 03:23:52 PM EST
